{"version":3,"file":"component---src-pages-cdinfo-mdx-d1a748d869d03420a0be.js","mappings":"4MAcA,MAAMA,EAAQC,IAA6C,IAA5C,OAAEC,EAAM,KAAEC,EAAI,SAAEC,GAAsBH,EACnD,OACEI,EAAAA,cAAA,MAAIC,IAAKJ,GACPG,EAAAA,cAAA,KAAGE,UAAU,QAAQJ,GACrBE,EAAAA,cAAA,KAAGE,UAAU,2BAA2BH,GACrC,EAIII,EAAeC,IAA8B,IAA7B,OAAEC,GAAqBD,EAClD,OACEJ,EAAAA,cAAA,UACGK,EAAOC,KAAI,CAACC,EAAON,IAClBD,EAAAA,cAACL,EAAK,CACJM,IAAKA,EACLJ,OAAQU,EAAMV,OACdC,KAAMS,EAAMT,KACZC,SAAUQ,EAAMR,aAGjB,EAIIS,EAASC,IAA8B,IAA7B,OAAEJ,GAAqBI,EAC5C,OACET,EAAAA,cAAA,OAAKE,UAAU,mCACbF,EAAAA,cAAA,WACEA,EAAAA,cAACU,EAAAA,GAAO,OAEVV,EAAAA,cAAA,WACEA,EAAAA,cAACG,EAAY,CAACE,OAAQA,KAEpB,EC3CV,SAASM,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOnB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBa,EAAYG,GAAI,KAAM,yBAA0B,KAAMhB,EAAAA,cAAoBa,EAAYI,EAAG,KAAM,2HAA4H,KAAMjB,EAAAA,cAAoBa,EAAYI,EAAG,KAAM,oIAAqI,KAAMjB,EAAAA,cAAoBa,EAAYI,EAAG,KAAM,mGAAoGjB,EAAAA,cAAoB,IAAK,CAC9nBoB,KAAM,mCACL,4BAA6B,KAAM,KAAMpB,EAAAA,cAAoBQ,EAAQ,CACtEH,OAAQO,EAAMS,YAAYC,YAAYjB,SAE1C,CAKA,MAJA,SAAoBO,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOK,EAAYxB,EAAAA,cAAoBwB,EAAWZ,EAAOZ,EAAAA,cAAoBW,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECSA,MAAMa,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,C","sources":["webpack://glospoliceband.org/./src/components/cdinfo.tsx","webpack://glospoliceband.org/./src/pages/cdinfo.mdx","webpack://glospoliceband.org/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { CdCover } from \"./images\";\n\ninterface TrackProps {\n  key: number;\n  number: number;\n  name: string;\n  composer: string;\n}\n\ninterface TracksProps {\n  tracks: TrackProps[];\n}\n\nconst Track = ({ number, name, composer }: TrackProps) => {\n  return (\n    <li key={number}>\n      <p className=\"mb-0\">{name}</p>\n      <p className=\"text-sm font-light mt-0\">{composer}</p>\n    </li>\n  );\n};\n\nexport const TrackListing = ({ tracks }: TracksProps) => {\n  return (\n    <ol>\n      {tracks.map((track, key) => (\n        <Track\n          key={key}\n          number={track.number}\n          name={track.name}\n          composer={track.composer}\n        />\n      ))}\n    </ol>\n  );\n};\n\nexport const CdInfo = ({ tracks }: TracksProps) => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2\">\n      <div>\n        <CdCover />\n      </div>\n      <div>\n        <TrackListing tracks={tracks} />\n      </div>\n    </div>\n  );\n};\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {CdInfo} from \"../components/cdinfo.tsx\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"A Night at the Movies\"), \"\\n\", React.createElement(_components.p, null, \"The Band of the Gloucestershire Constabulary is pleased to anounce the release of our latest CD, A Night at the Movies.\"), \"\\n\", React.createElement(_components.p, null, \"The band's new CD invites you to enjoy a night at the movies with a collection of tunes from classic films of the last 70 years.\"), \"\\n\", React.createElement(_components.p, null, \"The CD costs £5 (UK postage £2) and is available at all of our concerts or please contact us at \", React.createElement(\"a\", {\n    href: \"mailto:sales@glospoliceband.org\"\n  }, \"sales@glospoliceband.org\"), \".\"), \"\\n\", React.createElement(CdInfo, {\n    tracks: props.pageContext.frontmatter.tracks\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["Track","_ref","number","name","composer","React","key","className","TrackListing","_ref2","tracks","map","track","CdInfo","_ref3","CdCover","_createMdxContent","props","_components","Object","assign","h1","p","_provideComponents","components","href","pageContext","frontmatter","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}